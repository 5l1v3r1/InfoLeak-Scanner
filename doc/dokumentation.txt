Dokumentation
---------------------------------------------

Inhaltsverzeichnis
----------------------------------------
1. Metadaten
2. Installation
3. Was wird untersucht?
4. Warum wird es untersucht?
5. Risikoeinschätzung
6. Ausgabe
7. Fehlermeldungen
8. Sonstiges


1. Metadaten
----------------------------------------
Autor		: Yakup Ates
E-Mail	  	: Yakup.Ates@rub.de

Modul		: InfoLeak-Scanner
Kurzbeschreibung: Untersucht Webseite nach Information Leaks.
Sprache		: PHP
Benötigte Pakete: apache2 php5 php5-curl


2. Installation
----------------------------------------
Um das Modul ausführen zu können wird ein Webserver beispielsweise Apache, PHP
und curl benötigt. Auf einer Debian basierten Maschine können diese Pakete
folgendermaßen installiert werden:	       

	       $ sudo apt-get install apache2 php5 php5-curl

Anschließend kann das Modul in das Webverzeichnis verschoben/kopiert werden. In
der Regel ist das Webverzeichnis unter "/var/www/html/" zu
erreichen.
Nachdem sich das Modul nun im "/var/www/html/" Verzeichnis befindet, kann die
Anwendung mithilfe der "index.php" aufgerufen werden.
Der Aufruf könnte beispielsweise folgendermaßen aussehen:

    http://localhost/?url=<URL>
    
Wobei <URL> mit der URL zur Webseite, die untersucht werden soll ersetzt werden
muss.


3. Was wird untersucht?
----------------------------------------
Anhand einer HTTP-Anfrage zur jeweiligen URL wird ausschließlich der
HTML-Quelltext der HTTP-Antwort untersucht.
Bei der Untersuchung werden folgende Punkte beachtet:
    - Content-Management-System (CMS)
    - Plugins (Korrespondierend zur CMS)
    - JavaScript Bibliotheken
    - E-Mail Adressen


    Content-Management-System (CMS)
    -------------------------------
    Hier wird unter 7 verschiedenen CMS unterschieden:
    	 - Drupal
	 - Joomla
    	 - vbulletin
	 - Veyton
	 - Webspell
	 - Wordpress
	 - xt-commerce

    Plugins
    -------------------------------
    Falls eine CMS detektiert werden konnte, wird daraufhin nach den
    meistgenutzten Plugins zur korrespondierenden CMS gesucht.
    Die größte Plugin-Liste ist dabei die von Wordpress mit 980 Plugins.
    Von den 980 Plugins können zu 94 bekannte Schwachstellen angegeben werden.
    Plugins sind derzeit nur von Wordpress und Drupal aufgelistet.

    JavaScript Bibliotheken
    -------------------------------
    Es wird nach oft verwendeten und verwundbaren JavaScript Bibliotheken
    gesucht. Die mögliche Verwundbarkeit der JavaScript Bibliothek kann erst
    nach Detektion der verwendeten Version ausfindig gemacht werden. 
    
    E-Mail Adressen
    -------------------------------
    Die Webseite wird nach E-Mail Adressen untersucht. 


4. Warum wird es untersucht?
----------------------------------------

    Content-Management-System (CMS)
    -------------------------------
    Wenn ein Angreifer Kenntnis über die verwendete CMS erhält und sogar die
    Version der jeweiligen CMS ermitteln kann, so kann dieser sich nach
    bekannten Sicherheitslücken für die CMS dieser Version erkundigen. Bei einem
    Fund hätte der Angreifer dann unmittelbar danach einen Angriffsvektor.
    Selbst wenn lediglich die verwendete CMS ermittelt werden konnte (also ohne
    Version), dann kennt der Angreifer bereits die grobe Struktur der Webseite
    und kann ggf. anhand von gewissen Verhaltensweisen die jeweilige
    Version abschätzen. Hiermit ist der Angreifer dann in der Lage aus einem
    Black-Box-Test einen (eingeschränkten) White-Box-Test zu machen.
    Ein Angriff wird also letztendlich einfacher und somit auch
    wahrscheinlicher. 

    Plugins
    -------------------------------
    Sollte eine CMS detektiert worden sein, macht es Sinn nach Plugins der
    jeweiligen CMS zu suchen. Denn im Gegensatz zur CMS sind Plugins wesentlich
    öfter von Sicherheitslücken betroffen. Mit der Kenntnis der verwendeten
    Plugins und im besten Fall der jeweiligen Version, kann der Angreifer
    nämlich auf die Suche nach bereits bekannten Sicherheitslücken gehen.

    JavaScript Bibliotheken
    -------------------------------
    Oft werden veraltete JavaScript Bibliotheken auf Webseiten verwendeten die
    zudem auch noch bekannte Sicherheitslücken aufweisen. Ist der Angreifer in
    der Lage die verwendete JavaScript Bibliothek und bestenfalls dessen Version
    ausfindig zu machen, kann dieser sich nach bekannten Sicherheitslücken
    umsehen.
    Wenn eine verwundbare JavaScript Bibliothek verwendet wird hat dies jedoch
    nicht unmittelbar einen Angriffsvektor zur Folge. Trotz dessen wird ein
    erfolgreicher Angriff wahrscheinlicher.

    E-Mail Adressen
    -------------------------------
    Das schwächste Glied in der Sicherheitskette ist oft der Mensch. Mit der
    Preisgabe einer E-Mail Adresse wird unter anderem einem Angreifer die
    Möglichkeit gegeben mit den Betreibern der Webseite o.ä. zu
    kommunizieren. Hierdurch kann es zu Social Engineering angriffen oder
    ähnlichem kommen.
    Des weiteren können diese E-Mail Adressen zum Opfer von Spam Mails und
    Phishing angriffen werden.



5. Risikoeinschätzung
----------------------------------------
Die Risikoeinschätzung wurde anhand von Common Vulnerability Scoring System
Version 3.0 Calculator (https://www.first.org/cvss/) berechnet.

Vector Strings
--------------
CMS                     : CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:C/C:L/I:L/A:N 
Plugins                 : CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:C/C:L/I:L/A:N 
E-Mail Adressen         : CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N
JavaScript Bibliotheken : CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:N

| Thema                           | Score (0-10) |
|---------------------------------+--------------|
| Content-Management-System (CMS) |            6 |
| Plugins                         |            7 |
| JavaScript Bibliotheken         |            5 |
| E-Mail Adressen                 |            7 |

Kurze Erläuterung
--------------
| Thema                   | Detektiert | Version erkannt | Schwachstelle (bsp.) | Häufigkeit |
|-------------------------+------------+-----------------+----------------------+------------|
| CMS                     | Ja         | Ja              | SQLi, LFI, RCE       | selten     |
| Plugins                 | Ja         | Ja              | SQLi, XSS, LFI, RCE  | mittel     |
| JavaScript Bibliotheken | Ja         | Ja              | XSS                  | selten     |
| E-Mail Adressen         | Ja         | Nein            | SE, Spam, Phishing   | häufig     |


Weiterführendes
--------------
https://cwe.mitre.org/data/definitions/200.html
https://www.sourceclear.com/registry/security/information-disclosure/javascript/sid-2371/risk
http://www.huawei.com/en-CA/psirt/security-advisories/2016/huawei-sa-20161214-01-smartphone-en
https://www.owasp.org/index.php/Top_10_2013-A6-Sensitive_Data_Exposure


6. Ausgabe
----------------------------------------
Im folgenden wird die JSON Ausgabe des Moduls besprochen. Zuerst soll ein
Beispiel gezeigt werden in dem es zu keinem Fund kam. Anschließend soll ein
Beispiel gezeigt werden bei dem zu jedem Thema etwas gefunden wurde.

Untersuchung mit keinen Ergebnissen
--------------
{
    "checks": {
        "cms": {
            "result": false,
            "comment": "Es konnte keine CMS detektiert werden.",
            "finding": "N/A"
        },
        "plugin": {
            "result": false,
            "comment": "Es konnten keine Plugins gefunden werden.",
            "finding": "N/A"
        },
        "javascript": {
            "result": false,
            "comment": "Es konnte keine Javascript Bibliothek gefunden werden.",
            "finding": "N/A"
        },
        "email": {
            "result": false,
            "comment": "Es konnte keine E-Mail Adresse gefunden werden.",
            "finding": "N/A"
        }
    }
}


Untersuchung: Erfolgreich
--------------
{
    "checks": {
        "cms": {
            "result": true,
            "comment": "Die verwendete CMS und dessen Version konnte ermittelt
	    werden (wordpress 4.7.4).", 
            "finding": "[meta]: content : Wir gestalten minimalistische,
	    responsive WordPress Themes und teilen auf unserem Blog fin [...]" 
        },
        "plugin": {
            "result": true,
            "comment": [
                "Ein verwendetes Plugin konnte detektiert werden (jetpack).",
                "Ein verwendetes Plugin konnte detektiert werden (contact-form-7).",
                "Ein verwendetes Plugin konnte detektiert werden (woocommerce)."
            ],
            "finding": [
                "http://URL/wp-content/plugins/jetpack/css/jetpack.css?ver=4.7",
                "http://URL/wp-content/plugins/contact-form-7/includes/css/styles.css?ver=4.7",
                "http://URL/wp-content/plugins/woocommerce-multilingual/res/css/admin.css?ver=4.0.4"
            ]
        },
        "javascript": {
            "result": true,
            "comment": "Es wurde eine Javascript Bibliothek gefunden für dessen
	    Version eine Schwachstelle existiert (jquery 1.4.1).", 
            "finding": {
                "attr": "http://URL/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.4.1",
                "version": "1.4.1"
            }
        },
        "email": {
            "result": true,
            "comment": "Die Offenlegung von E-Mail Adressen könnte zu
	    ungewünschtem Spam und unter anderem auch zu einer gezielten
	    Phishing Attacke führen.", 
            "finding": "webmaster@URL.de"
        }
    }
}


| Feld    | Typ     | Beschreibung                                          |
|---------+---------+-------------------------------------------------------|
| result  | Boolean | True, falls es zu einem Fund kam. Andernfalls false.  |
| comment | String  | Kurze Beschreibung, worum es geht.                    |
| finding | String  | Ausschnitt von maximal 100 Zeichen des Fundes.        |
|         |         | Sollte nichts gefunden werden, wird "N/A" ausgegeben. |

| Thema                   | Anzahl maximaler Rückgabewerte | Version Ermittlung |
|-------------------------+--------------------------------+--------------------|
| CMS                     |                              1 | Ja                 |
| Plugins                 |                              3 | Ja                 |
| JavaScript Bibliotheken |                              1 | Ja                 |
| E-Mail                  |                              1 | Nein               |


CMS
 - Konnte die CMS und die Version detektiert werden, werden diese im Feld
   "comment" in Klammern ausgegeben: "[...] (wordpress 4.7.4)." und das Feld
   "result" wird auf "true" gesetzt.
 - Im Feld "finding" wird zuerst das HTML-Tag beschrieben in dem es gefunden
   wurde: "[meta]: [...]". Anschließend wird der Inhalt des HTML-Tags mit dem
   interessanten Inhalt gekürzt auf 100 Zeichen ausgegeben.

Plugin
 - Wenn mindestens ein Plugin gefunden werden konnte wird das Feld "result" auf
   "true" gesetzt. Im Feld "comment" wird das jeweilige Plugin und ggf. dessen
   detektierte Version angegeben: "[...] (jetpack)."
 - Der erste "finding" Eintrag entspricht dem ersten "comment" Eintrag. Dabei
   beinhaltet das Feld "finding" den String anhand dessen das Plugin gefunden
   wurde. 

JavaScript
 - Sobald mindestens eine JavaScript Bibliothek gefunden wurde wird das Feld
   "result" auf "true" gesetzt. 
 - Im Feld "comment" wird die gefundene Bibliothek und ggf. dessen Version
   angegeben: "[...] (jquery 1.4.1)."
 - Im Feld "finding" wird der Attribut-Wert anhand dessen die Bibliothek
   ausfinding gemacht werden konnte angegeben und ggf. noch einmal dessen
   version: "attr": "http://UR..." "version": "1.4.1"

E-Mail
 - Sollte eine E-Mail Adresse gefunden werden, wird das Feld "result" auf "true"
   gesetzt. 
 - Im Feld "finding" wird die gefundene E-Mail Adresse ausgegeben.


7. Fehlermeldungen
----------------------------------------
Im Folgenden werden mögliche Fehlermeldungen aufgelistet:

"Sorry, the given address has no source code."
	- Die angeforderte URL antwortete mit leerem Quelltext oder es kam zu
	einem CURL timeout (10 Sekunden).

"Sorry, this does not look like a valid URL."
	- Die angefragte URL ist keine gewöhnliche URL.

"Sorry, I am not able to communicate on that port."
	- Anfragen werden nur auf Port 80 erlaubt.

"Scanning localhost is not allowed."
	- Das Untersuchen des Servers selbst ist nicht gestattet.

"Sorry, the given address is not reachable."
	- Lokale IP-Adressen werden nicht untersucht. Auch könnte es zu einem
	Timeout gekommen sein.

"Sorry, the given address is not reachable. (404)"
	- Die angefragte URL antwortete mit 404 und ist dem entsprechend nicht
	erreichbar. 

"You should not tell me your username/password for other services."
        - URL Anfragen mit Benutzername/Passwort in der URL werden nicht
	bearbeitet.


8. Sonstiges
----------------------------------------
Das Modul wurde getestet auf:

	Mozilla Firefox 45.7.0

	PHP 5.6.30-0+deb8u1 (cli) (built: Feb  8 2017 08:50:21) 
	Copyright (c) 1997-2016 The PHP Group
	Zend Engine v2.6.0, Copyright (c) 1998-2016 Zend Technologies

	Server version: Apache/2.4.10 (Debian)
	Server built:   Feb 24 2017 18:40:28
	Server's Module Magic Number: 20120211:37
	Server loaded:  APR 1.5.1, APR-UTIL 1.5.4
	Compiled using: APR 1.5.1, APR-UTIL 1.5.4
	Architecture:   64-bit
	Server MPM:     prefork
	threaded:     no
	forked:     yes (variable process count)
	Server compiled with....
	-D APR_HAS_SENDFILE
	-D APR_HAS_MMAP
	-D APR_HAVE_IPV6 (IPv4-mapped addresses enabled)
	-D APR_USE_SYSVSEM_SERIALIZE
	-D APR_USE_PTHREAD_SERIALIZE
	-D SINGLE_LISTEN_UNSERIALIZED_ACCEPT
	-D APR_HAS_OTHER_CHILD
	-D AP_HAVE_RELIABLE_PIPED_LOGS
	-D DYNAMIC_MODULE_LIMIT=256
	-D HTTPD_ROOT="/etc/apache2"
	-D SUEXEC_BIN="/usr/lib/apache2/suexec"
	-D DEFAULT_PIDLOG="/var/run/apache2.pid"
	-D DEFAULT_SCOREBOARD="logs/apache_runtime_status"
	-D DEFAULT_ERRORLOG="logs/error_log"
	-D AP_TYPES_CONFIG_FILE="mime.types"
	-D SERVER_CONFIG_FILE="apache2.conf"
 
